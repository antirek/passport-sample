html
  head
    title Video Call
    link(rel='stylesheet', href='/public/stylesheets/style.css')
    script(type='text/javascript', src='http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js')
    script(type='text/javascript', src='/public/lib/peerjs/peer.js')
    script(type='text/javascript', src='/public/lib/blueimp-md5/js/md5.js')
    script.

      var user_id = '#{user.username}';
      var peer_id = md5('#{user.username}');

      // Compatibility shim
      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;

      // PeerJS object
      var peer = new Peer(peer_id, {host: '#{peer.host}', port: 9000, path: '/myapp', debug: 3});

      peer.on('open', function(){
        //$('#my-id').text(peer.id);
        $('#my-id').text(user_id);
      });
      
      // Receiving a call
      peer.on('call', function(call){
        // Answer the call automatically (instead of prompting user) for demo purposes
        call.answer(window.localStream);
        step3(call);
      });

      peer.on('error', function(err){
        alert(err.message);
        // Return to step 2 if error occurs
        step2();
      });
      
      // Click handlers setup
      $(function(){
        $('#make-call').click(function(){
          // Initiate a call!
          var call = peer.call(md5($('#callto-id').val()), window.localStream);
          step3(call);
        });
      
        $('#end-call').click(function(){
          window.existingCall.close();
          step2();
        });

        // Retry if getUserMedia fails
        $('#step1-retry').click(function(){
          $('#step1-error').hide();
          step1();
        });
        
        // Get things started
        step1();
      });

      
      function step1 () {
        // Get audio/video stream
        navigator.getUserMedia({
            audio: true, 
            video: true
          }, function(stream){
            // Set your video displays
            $('#my-video').prop('src', URL.createObjectURL(stream));
            window.localStream = stream;
            step2();
          }, function(){ 
            $('#step1-error').show();
          });
      }

      function step2 () {
        $('#step1, #step3').hide();
        $('#step2').show();
      }

      function step3 (call) {
        // Hang up on an existing call if present
        if (window.existingCall) {
        window.existingCall.close();
      }

      // Wait for stream on the call, then set peer video display
      call.on('stream', function(stream){
        $('#their-video').prop('src', URL.createObjectURL(stream));
      });

      // UI stuff
      window.existingCall = call;
        $('#their-id').text(call.peer);
        call.on('close', step2);
        $('#step1, #step2').hide();
        $('#step3').show();
      }

  body
    
    .pure-g

      // Video area 
      #video-container.pure-u-2-3
        h3= user.username
        video#their-video(autoplay='autoplay')
        video#my-video(muted='true', autoplay='autoplay')

      // Steps 
      .pure-u-1-3        

        h3 Friends
          each friend in friends
            li
              a.friend(href='#')= friend.username

        script.
          $('.friend').bind('click', function(e){
            var friend_id = $(this).html();            
            var call = peer.call(md5(friend_id), window.localStream);
            step3(call);
          }); 

        
        // Get local audio/video stream 
        #step1
          p
            | Please click `allow` on the top of the screen so we can access your webcam and microphone for calls.
          #step1-error
            p
              | Failed to access the webcam and microphone. Make sure to run this demo on an http server and click allow when asked for permission by the browser.
            a#step1-retry.pure-button.pure-button-error(href='#') Try again
        
        // Make calls to others 
        #step2
          p
            | Your id:
            span#my-id ...
          p Share this id with others so they can call you.
          h3 Make a call
          .pure-form
            input#callto-id(type='text', placeholder='Call user id...')
            a#make-call.pure-button.pure-button-success(href='#') Call
        
        //Call in progress 
        #step3
          p
            | Currently in call with
            span#their-id ...
          p
            a#end-call.pure-button.pure-button-error(href='#') End call

        h4 Add friend
          input#friend_username(type='text')
          a#add_friend Add
          script.
            $('#add_friend').bind('click', function(e){
              $.post('/private/addfriend', 
                {friend_username: $('#friend_username').val()}, 
                function(data){
                  console.log(data);
                })
            });